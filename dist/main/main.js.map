{"version":3,"file":"main/main.js","mappings":"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","sources":["webpack://srsly/./src/js/modules/slide.js","webpack://srsly/./src/js/modules/accordion.js","webpack://srsly/./src/js/script.js","webpack://srsly/./src/js/modules/tabs.js","webpack://srsly/./src/js/modules/mobile-menu.js","webpack://srsly/./src/js/modules/animate.js"],"sourcesContent":["const prefix = \"element-\";\r\n\r\nexport const settings = {\r\n  transitionDuration:\r\n    Number(\r\n      getComputedStyle(document.documentElement).getPropertyValue(\r\n        \"--transition-duration-value\"\r\n      )\r\n    ) ?? 300,\r\n  transitionEasing:\r\n    getComputedStyle(document.documentElement).getPropertyValue(\r\n      \"--transition-timing-function\"\r\n    ) ?? \"ease\",\r\n  classes: {\r\n    show: prefix + \"show\",\r\n    collapse: prefix + \"collapse\",\r\n    collapsing: prefix + \"collapsing\",\r\n  },\r\n};\r\n\r\nconst Slide = (element) => {\r\n  if (!element.classList.contains(settings.classes.show)) {\r\n    element.classList.add(settings.classes.show, settings.classes.collapsing);\r\n    element.style.height = element.scrollHeight + \"px\";\r\n    element.addEventListener(\"transitionend\", () => {\r\n      element.classList.remove(settings.classes.collapsing);\r\n      element.removeAttribute(\"style\");\r\n    });\r\n  } else {\r\n    element.classList.remove(settings.classes.collapse, settings.classes.show);\r\n    element.classList.add(settings.classes.collapsing);\r\n\r\n    element.animate([{ height: element.scrollHeight + \"px\" }, { height: 0 }], {\r\n      duration: settings.transitionDuration,\r\n      iterations: 1,\r\n      easing: settings.transitionEasing,\r\n    });\r\n    setTimeout(function () {\r\n      element.classList.remove(settings.classes.collapsing);\r\n      element.classList.add(settings.classes.collapse);\r\n    }, settings.transitionDuration);\r\n  }\r\n};\r\nexport default Slide;\r\n","import Slide, { settings } from \"./slide\";\r\nconst Accordion = () => {\r\n  class Accordion {\r\n    constructor(domNode) {\r\n      this.rootEl = domNode;\r\n      this.buttonEl = this.rootEl.querySelector(\".accordion__button\");\r\n\r\n      const controlsId = this.buttonEl.getAttribute(\"aria-controls\");\r\n      this.contentEl = document.getElementById(controlsId);\r\n\r\n      this.open = this.buttonEl.getAttribute(\"aria-expanded\") === \"true\";\r\n\r\n      // add event listeners\r\n      this.buttonEl.addEventListener(\"click\", this.onButtonClick.bind(this));\r\n    }\r\n\r\n    onButtonClick() {\r\n      if (this.contentEl.classList.contains(settings.classes.collapsing)) {\r\n        return;\r\n      }\r\n      this.toggle(!this.open);\r\n    }\r\n\r\n    toggle(open) {\r\n      // don't do anything if the open state doesn't change\r\n      if (open === this.open) {\r\n        return;\r\n      }\r\n\r\n      // update the internal state\r\n      this.open = open;\r\n\r\n      // handle DOM updates\r\n      this.buttonEl.setAttribute(\"aria-expanded\", `${open}`);\r\n      Slide(this.contentEl);\r\n    }\r\n\r\n    // Add public open and close methods for convenience\r\n    open() {\r\n      this.toggle(true);\r\n    }\r\n\r\n    close() {\r\n      this.toggle(false);\r\n    }\r\n  }\r\n\r\n  // init accordions\r\n  const accordions = document.querySelectorAll(\".accordion__title\");\r\n  accordions.forEach((accordionEl) => {\r\n    new Accordion(accordionEl);\r\n  });\r\n};\r\nexport default Accordion;\r\n","import Accordion from \"./modules/accordion\";\r\nimport Tabs from \"./modules/tabs\";\r\nimport MobileMenu from \"./modules/mobile-menu\";\r\nimport Animate from \"./modules/animate\";\r\n\r\n//Accordion\r\nAccordion();\r\n\r\n//Tabs\r\nTabs();\r\n\r\n//Mobile menu\r\nMobileMenu();\r\n\r\n//Animate\r\nAnimate();\r\n","import Slide, { settings } from \"./slide\";\r\n\r\nconst Tabs = () => {\r\n  function tabHandler(element) {\r\n    const tabActiveClass = \"tab--active\";\r\n\r\n    let dataRelActive = element.dataset.tabRel;\r\n\r\n    const parent = element.closest(\".tabs\");\r\n\r\n    const visibleContent = parent.querySelector(\".\" + settings.classes.show);\r\n    const currentContent = parent.querySelector(\r\n      \"[data-tab-id='\" + dataRelActive + \"']\"\r\n    );\r\n\r\n    if (\r\n      element.classList.contains(tabActiveClass) ||\r\n      currentContent.classList.contains(settings.classes.collapsing)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const tabActive = parent.querySelectorAll(\".\" + tabActiveClass);\r\n\r\n    for (const element of tabActive) {\r\n      element.classList.remove(tabActiveClass);\r\n    }\r\n\r\n    const tabCurrent = parent.querySelectorAll(\r\n      \"[data-tab-rel='\" + dataRelActive + \"']\"\r\n    );\r\n    for (const element of tabCurrent) {\r\n      element.classList.add(tabActiveClass);\r\n    }\r\n\r\n    Slide(visibleContent);\r\n    Slide(currentContent);\r\n  }\r\n\r\n  const buttons = document.querySelectorAll(\".tab\");\r\n  for (const button of buttons) {\r\n    button.addEventListener(\"click\", function () {\r\n      tabHandler(button);\r\n    });\r\n  }\r\n};\r\nexport default Tabs;\r\n","import Slide, { settings } from \"./slide\";\r\n\r\nconst MobileMenu = () => {\r\n  function toggleSiteMenu() {\r\n    const menuVisibleClass = \"overlay-menu--visible\";\r\n    const menuChangingClass = \"overlay-menu--changing\";\r\n\r\n    const menu = document.querySelector(\".overlay-menu\");\r\n    const menuOverlay = document.querySelector(\".curtain--menu\");\r\n\r\n    document.documentElement.classList.toggle(\"is-locked\");\r\n    menu.classList.toggle(menuVisibleClass);\r\n    menu.classList.add(menuChangingClass);\r\n\r\n    menu.addEventListener(\"transitionend\", function () {\r\n      menu.classList.remove(menuChangingClass);\r\n    });\r\n\r\n    menuOverlay.classList.toggle(\"curtain--visible\");\r\n  }\r\n\r\n  for (const element of document.querySelectorAll(\r\n    \"[data-overlay-menu-toggle], .curtain--menu\"\r\n  )) {\r\n    element.addEventListener(\"click\", function () {\r\n      toggleSiteMenu();\r\n    });\r\n  }\r\n\r\n  //Mobile submenu toggle\r\n  for (const element of document.querySelectorAll(\".dropdown-toggle\")) {\r\n    element.addEventListener(\"click\", function () {\r\n      const subMenu = element.nextElementSibling;\r\n      if (subMenu.classList.contains(settings.classes.collapsing)) {\r\n        return;\r\n      }\r\n      element.classList.toggle(\"dropdown-toggle--active\");\r\n      Slide(element.nextElementSibling);\r\n    });\r\n  }\r\n};\r\nexport default MobileMenu;\r\n","const Animate = () => {\n  const els = document.querySelectorAll(\"[data-animate]\");\n  const observer = new IntersectionObserver(\n    (entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add(\"animate-show\");\n        }\n      });\n    },\n    {\n      rootMargin: \"-30px\",\n    }\n  );\n  els.forEach((el) => {\n    observer.observe(el);\n  });\n};\nexport default Animate;\n"],"names":["prefix","settings","transitionDuration","Number","getComputedStyle","document","documentElement","getPropertyValue","transitionEasing","classes","show","collapse","collapsing","element","classList","contains","remove","add","animate","height","scrollHeight","duration","iterations","easing","setTimeout","style","addEventListener","removeAttribute","Accordion","constructor","domNode","this","rootEl","buttonEl","querySelector","controlsId","getAttribute","contentEl","getElementById","open","onButtonClick","bind","toggle","setAttribute","close","querySelectorAll","forEach","accordionEl","tabHandler","tabActiveClass","dataRelActive","dataset","tabRel","parent","closest","visibleContent","currentContent","tabActive","tabCurrent","buttons","button","toggleSiteMenu","menuChangingClass","menu","menuOverlay","nextElementSibling","els","observer","IntersectionObserver","entries","entry","isIntersecting","target","rootMargin","el","observe"],"sourceRoot":""}